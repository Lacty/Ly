//
// ミニゲーム雛形
//

#include "appEnv.hpp"


// アプリのウインドウサイズ
enum Window {
	WIDTH = 800,
	HEIGHT = 950
};

// 
// メインプログラム
// 
int main() {
	// アプリウインドウの準備
	AppEnv app_env(Window::WIDTH, Window::HEIGHT);
	app_env.bgColor(Color(1, 1, 1));
	// タイトル画面
	Texture title_S("res/title_S.png");
	Texture title_T1("res/title_T(1).png");
	Texture title_A("res/title_A.png");
	Texture title_R("res/title_R.png");
	Texture title_T2("res/title_T(2).png");

	Texture title_E("res/title_E.png");
	Texture title_X("res/title_X.png");
	Texture title_I("res/title_I.png");
	Texture title_T3("res/title_T(3).png");

	// プレイ画面素材
	Texture syobon("res/syobon.png");
	Texture sonna("res/sonna.png");
	Texture ranran("res/ranran.png");
	Texture syakin("res/syaki-n.png");
	Texture syakin2("res/syakin.png");

	float s = 0;
	float t = 0.4;
	float a = 0.8;
	float r = 1.2;
	float t2 = 1.6;

	float e = 1.0;
	float x = 1.6;
	float i = 2.0;
	float t3 = 2.4;


	float move = 0;
	float gun = 0;

	int START_time = 60 * 15;
	int EXIT_time = 60 * 15;


	// メインループ
	while (1) {

		// ウィンドウが閉じられたらアプリを終了
		if (!app_env.isOpen()) return 0;

		// 描画準備
		app_env.setupDraw();

		// STARTロゴ
		s = s + 0.025;
		drawTextureBox(-380, std::sin(s) * 20 + 200, 128, 128,
			0, 0, 128, 128,
			title_S,
			Color(1, 1, 1));

		t = t + 0.025;
		drawTextureBox(-300, std::sin(t) * 20 + 230, 128, 128,
			0, 0, 128, 128,
			title_T1,
			Color(1, 1, 1));

		a = a + 0.025;
		drawTextureBox(-230, std::sin(a) * 20 + 190, 128, 128,
			0, 0, 128, 128,
			title_A,
			Color(1, 1, 1));

		r = r + 0.025;
		drawTextureBox(-135, std::sin(r) * 20 + 215, 128, 128,
			0, 0, 128, 128,
			title_R,
			Color(1, 1, 1));

		t2 = t2 + 0.025;
		drawTextureBox(-40, std::sin(t2) * 20 + 180, 128, 128,
			0, 0, 128, 128,
			title_T2,
			Color(1, 1, 1));

		// EXITロゴ
		e = e + 0.025;
		drawTextureBox(110, std::sin(e) * 20 + 50, 110, 110,
			0, 0, 128, 128,
			title_E,
			Color(1, 1, 1));

		x = x + 0.025;
		drawTextureBox(190, std::sin(x) * 20 + 45, 70, 60,
			0, 0, 128, 128,
			title_X,
			Color(1, 1, 1));

		i = i + 0.025;
		drawTextureBox(230, std::sin(i) * 20 + 45, 70, 70,
			0, 0, 128, 128,
			title_I,
			Color(1, 1, 1));

		t3 = t3 + 0.025;
		drawTextureBox(260, std::sin(t3) * 20 + 45, 80, 80,
			0, 0, 128, 128,
			title_T3,
			Color(1, 1, 1));

		// 自機
		if (app_env.isPressKey('A')){
			move += 5;
		}
		if (app_env.isPressKey('D')){
			move -= 5;
		}
		if (move >= (400 - 38)){
			move -= 5;
		}
		if (move <= (-400 + 38)){
			move += 5;
		}
		drawFillCircle(0 - move, -400, 40, 40,
			3,
			Color(1.2, 0.4, 1.7));


		// レーザーの発射
		if (app_env.isPressKey(GLFW_KEY_SPACE)) {
			drawLine(0 - move, -360 - gun, 0 - move, 480 - gun,
				10,
				Color(1, 0, 0.6));
			//　あたり判定
			if (move < 400) {
				if (move > -75) {

					// ＨＰバーの表示
					float START_bar = -400;
					float START_y = -Window::HEIGHT / 2 + 940;

					// 表示サイズ
					float width = (START_time * 800) / (60 * 15);
					float height = 15;

					//　HPバーを矩形で表示
					drawFillBox(START_bar, START_y, width, height, Color(1, 0, 0));
					// プレイタイムを減らす
					START_time -= 6;
				}
			}
			if (move < -135) {
				if (move > -330) {
					// ＨＰバーの表示
					float EXIT_bar = -400;
					float EXIT_y = -Window::HEIGHT / 2 + 940;

					// 表示サイズ
					float width = (EXIT_time * 800) / (60 * 15);
					float height = 15;
					// HPバーを矩形で表示
					drawFillBox(EXIT_bar, EXIT_y, width, height, Color(1, 0, 0));
					// プレイタイムを減らす
					EXIT_time -= 3;
				}
			}
			// プレイタイムが０になったら次へ
			if (START_time == 0) break;
		}
		//
		// ここにゲームの処理を書く
		// 

		// 画面を更新
		app_env.update();
	}

	float totu_time = 0;

	int syobon1_HP = 60 * 15;
	int syobon2_HP = 60 * 15;
	int syobon3_HP = 60 * 15;
	int syobon4_HP = 60 * 15;

	float syobonUP1 = 0;
	float syobonUP2 = 0;
	float syobonUP3 = 0;
	float syobonUP4 = 0;


	// メインループ
	while (1) {
		// ウインドウが閉じられたら終了
		if (!app_env.isOpen()) return 0;

		// 描画準備
		app_env.setupDraw();

		// ゲーム本編

		//
		// (´・ω・｀)一体目
		//

		totu_time += 0.01;

		if (totu_time >= 1) {
			if (totu_time <= 3) {
				if (syobon1_HP > 0){
					drawTextureBox(0, 350, 256, 128,
						0, 0, 256, 128,
						syakin2,
						Color(0, 0, 0));
				}
				// シャキーン
				if (syobon1_HP > 0) {
					drawTextureBox(0, 300, 256, 128,
						0, 0, 256, 128,
						syakin,
						Color(0, 0, 0));
				}
				if (move < -15) {
					if (move > -240) {

						if (app_env.isPressKey(GLFW_KEY_SPACE)) {

							// ＨＰバーの表示
							float syobon1_bar = -400;
							float syobon1_y = -Window::HEIGHT / 2 + 940;

							// 表示サイズ
							float width = (syobon1_HP * 800) / (60 * 15);
							float height = 15;
							// HPバーを矩形で表示
							drawFillBox(syobon1_bar, syobon1_y, width, height, Color(1, 0, 0));
							// プレイタイムを減らす
							syobon1_HP -= 10;
						}
					}
				}
			}
		}
		// (´・ω・｀)を上に移動させる
		if (syobon1_HP <= 0){
			syobonUP1 += 1;
		}
		if (syobon1_HP <= 0){
			drawTextureBox(0, 350 + syobonUP1, 256, 128,
				0, 0, 256, 128,
				syobon,
				Color(0, 0, 0));
		}
		// しょぼんを上に移動させる
		if (syobon1_HP <= 0) {
			drawTextureBox(0, 300 + syobonUP1, 256, 128,
				0, 0, 256, 128,
				sonna,
				Color(1, 1, 1));
		}

		//
		// (´・ω・｀)二体目
		//

		if (totu_time >= 3) {
			if (totu_time <= 6) {
				if (syobon2_HP > 0){
					drawTextureBox(-300, 350, 256, 128,
						0, 0, 256, 128,
						syakin2,
						Color(0, 0, 0));
				}
				// シャキーン
				if (syobon2_HP > 0) {
					drawTextureBox(-300, 300, 256, 128,
						0, 0, 256, 128,
						syakin,
						Color(0, 0, 0));
				}
				if (move < 280) {
					if (move > 95) {

						if (app_env.isPressKey(GLFW_KEY_SPACE)) {

							// ＨＰバーの表示
							float syobon1_bar = -400;
							float syobon1_y = -Window::HEIGHT / 2 + 940;

							// 表示サイズ
							float width = (syobon2_HP * 800) / (60 * 15);
							float height = 15;
							// HPバーを矩形で表示
							drawFillBox(syobon1_bar, syobon1_y, width, height, Color(1, 0, 0));
							// プレイタイムを減らす
							syobon2_HP -= 10;
						}
					}
				}
			}
		}
		// (´・ω・｀)を上に移動させる
		if (syobon2_HP <= 0){
			syobonUP2 += 1;
		}
		if (syobon2_HP <= 0){
			drawTextureBox(-300, 350 + syobonUP2, 256, 128,
				0, 0, 256, 128,
				syobon,
				Color(0, 0, 0));
		}
		// しょぼんを上に移動させる
		if (syobon2_HP <= 0) {
			drawTextureBox(-300, 300 + syobonUP2, 256, 128,
				0, 0, 256, 128,
				sonna,
				Color(1, 1, 1));
		}

		//
		// (´・ω・｀)3体目
		//

		if (totu_time >= 5) {
			if (totu_time <= 8.5) {
				if (syobon3_HP > 0){
					drawTextureBox(-150, 350, 256, 128,
						0, 0, 256, 128,
						syakin2,
						Color(0, 0, 0));
				}
				// シャキーン
				if (syobon3_HP > 0) {
					drawTextureBox(-150, 300, 256, 128,
						0, 0, 256, 128,
						syakin,
						Color(0, 0, 0));
				}
				if (move < 130) {
					if (move > -100) {

						if (app_env.isPressKey(GLFW_KEY_SPACE)) {

							// ＨＰバーの表示
							float syobon1_bar = -400;
							float syobon1_y = -Window::HEIGHT / 2 + 940;

							// 表示サイズ
							float width = (syobon3_HP * 800) / (60 * 15);
							float height = 15;
							// HPバーを矩形で表示
							drawFillBox(syobon1_bar, syobon1_y, width, height, Color(1, 0, 0));
							// プレイタイムを減らす
							syobon3_HP -= 10;
						}
					}
				}
			}
		}
		// (´・ω・｀)を上に移動させる
		if (syobon3_HP <= 0){
			syobonUP3 += 1;
		}
		if (syobon3_HP <= 0){
			drawTextureBox(-150, 350 + syobonUP3, 256, 128,
				0, 0, 256, 128,
				syobon,
				Color(0, 0, 0));
		}
		// しょぼんを上に移動させる
		if (syobon3_HP <= 0) {
			drawTextureBox(-150, 300 + syobonUP3, 256, 128,
				0, 0, 256, 128,
				sonna,
				Color(1, 1, 1));
		}

		//
		// (´・ω・｀)4体目
		//

		if (totu_time >= 7) {
			if (totu_time <= 10) {
				if (syobon4_HP > 0){
					drawTextureBox(70, 350, 256, 128,
						0, 0, 256, 128,
						syakin2,
						Color(0, 0, 0));
				}
				// シャキーン
				if (syobon4_HP > 0) {
					drawTextureBox(70, 300, 256, 128,
						0, 0, 256, 128,
						syakin,
						Color(0, 0, 0));
				}
				if (move < -85) {
					if (move > -300) {

						if (app_env.isPressKey(GLFW_KEY_SPACE)) {

							// ＨＰバーの表示
							float syobon1_bar = -400;
							float syobon1_y = -Window::HEIGHT / 2 + 940;

							// 表示サイズ
							float width = (syobon4_HP * 800) / (60 * 15);
							float height = 15;
							// HPバーを矩形で表示
							drawFillBox(syobon1_bar, syobon1_y, width, height, Color(1, 0, 0));
							// プレイタイムを減らす
							syobon4_HP -= 10;
						}
					}
				}
			}
		}
		// (´・ω・｀)を上に移動させる
		if (syobon4_HP <= 0){
			syobonUP4 += 1;
		}
		if (syobon4_HP <= 0){
			drawTextureBox(70, 350 + syobonUP4, 256, 128,
				0, 0, 256, 128,
				syobon,
				Color(0, 0, 0));
		}
		// しょぼんを上に移動させる
		if (syobon4_HP <= 0) {
			drawTextureBox(70, 300 + syobonUP4, 256, 128,
				0, 0, 256, 128,
				sonna,
				Color(1, 1, 1));
		}

		// 自機
		if (app_env.isPressKey('A')){
			move += 5;
		}
		if (app_env.isPressKey('D')){
			move -= 5;
		}
		if (move >= (400 - 38)){
			move -= 5;
		}
		if (move <= (-400 + 38)){
			move += 5;
		}
		drawFillCircle(0 - move, -400, 40, 40,
			3,
			Color(1.2, 0.4, 1.7));

		// レーザーの発射
		if (app_env.isPressKey(GLFW_KEY_SPACE)) {
			drawLine(0 - move, -360 - gun, 0 - move, 480 - gun,
				10,
				Color(1, 0, 0.6));
		}
		// 画面を更新
		app_env.update();
	}


	// ゲームを終了
}